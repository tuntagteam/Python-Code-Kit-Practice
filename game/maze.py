import tkinter as tk  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ tkinter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á GUI (Graphical User Interface)
import random         # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡∏î‡∏π‡∏• random ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô
import time           # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏°‡∏î‡∏π‡∏• time ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ
from tkinter import messagebox  # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ widget ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (modal)

# === CONFIGURATION ===
WIDTH, HEIGHT = 400, 400       # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÄ‡∏Å‡∏°: ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•
# Q: ‡∏ó‡∏≥‡πÑ‡∏°‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏¢‡∏Å CONFIGURATION ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤? ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£?
# A: ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‡∏Ç‡∏ô‡∏≤‡∏î ‡∏™‡∏µ ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏° ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏î

ROWS, COLS = 10, 10            # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï
CELL_SIZE = WIDTH // COLS      # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏ã‡∏•‡∏•‡πå‡πÇ‡∏î‡∏¢‡∏´‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå

WALL_COLOR   = "#FF0000"  # ‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≥‡πÅ‡∏û‡∏á (‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
PATH_COLOR   = "#222222"  # ‡∏™‡∏µ‡πÄ‡∏Ç‡πâ‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏î‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
GRID_COLOR   = "#00FFFF"  # ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏≠‡∏°‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏ö‡∏Å‡∏£‡∏¥‡∏î ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå Neon
PLAYER_COLOR = "#FF0055"  # ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏™‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
GOAL_COLOR   = "#00FF66"  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏™‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
TRACE_COLOR  = "#FFFF00"  # ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏™‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô (trail)

# Q: ‡∏ó‡∏≥‡πÑ‡∏°‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô CONFIGURATION?
# A: ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡∏´‡∏•‡∏≤‡∏¢‡∏à‡∏∏‡∏î ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÇ‡∏Ñ‡πâ‡∏î‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤

# === CLASS DEFINITION ===
class NeonMaze:
    def __init__(self, root):  # ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡∏ö‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏à‡∏≤‡∏Å tkinter
        self.root = root  # ‡πÄ‡∏Å‡πá‡∏ö reference ‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
        self.root.title("‚ö° Neon Maze Explorer ‚ö°")  # ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°
        self.root.configure(bg="black")  # ‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏î‡∏≥ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ô‡πâ‡∏ô UI ‡πÅ‡∏ö‡∏ö Neon

        # --- TOOLBAR ---
        bar = tk.Frame(root, bg="black", pady=5)  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏ü‡∏£‡∏°‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        bar.pack(fill="x")  # ‡∏Ç‡∏¢‡∏≤‡∏¢‡πÄ‡∏ü‡∏£‡∏°‡πÄ‡∏ï‡πá‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á

        btn_style = {  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ
            "bg": "#111",  # ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏õ‡∏∏‡πà‡∏°
            "fg": GRID_COLOR,  # ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ö‡∏ô‡∏õ‡∏∏‡πà‡∏°
            "activebackground": "#222",  # ‡∏™‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
            "activeforeground": "white",  # ‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡∏Å‡∏î
            "relief": "flat",  # ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡∏≠‡∏ö‡∏ô‡∏π‡∏ô
            "font": ("Consolas", 11, "bold"),  # ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡πÅ‡∏•‡∏∞‡∏Ç‡∏ô‡∏≤‡∏î
            "padx": 10, "pady": 5  # ‡∏£‡∏∞‡∏¢‡∏∞‡∏Ç‡∏≠‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏õ‡∏∏‡πà‡∏°
        }
        tk.Button(bar, text="üîÑ New Maze", command=self.reset_maze, **btn_style).pack(side="left", padx=10)
        # Q: ‡∏õ‡∏∏‡πà‡∏° New Maze ‡∏°‡∏µ‡πÑ‡∏ß‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ ‡πÅ‡∏•‡∏∞ command ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á?
        # A: ‡πÉ‡∏ä‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏ò‡∏≠‡∏î reset_maze ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å, command=self.reset_maze ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á reference ‡∏Ç‡∏≠‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÑ‡∏õ‡πÉ‡∏´‡πâ Tkinter ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏¥‡∏î event ‡∏Ñ‡∏•‡∏¥‡∏Å

        self.moves_label = tk.Label(bar, text="Moves: 0", fg="white", bg="black", font=("Consolas",11))
        self.moves_label.pack(side="left", padx=20)  # ‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà

        self.timer_label = tk.Label(bar, text="Time: 00:00", fg="white", bg="black", font=("Consolas",11))
        self.timer_label.pack(side="left", padx=20)  # ‡∏õ‡πâ‡∏≤‡∏¢‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ

        # --- CANVAS ---
        self.canvas = tk.Canvas(root, width=WIDTH, height=HEIGHT, bg="black", highlightthickness=0)
        self.canvas.pack(padx=20, pady=10)  # ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏î‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡πÅ‡∏•‡∏∞‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢

        # --- INITIAL STATE ---
        self.player_pos = [0, 0]  # ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∏‡∏°‡∏ö‡∏ô‡∏ã‡πâ‡∏≤‡∏¢ ([row, col])
        self.moves = 0  # ‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 0
        self.start_time = None  # ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏° ‡∏à‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô _generate_maze
        self.trace = []  # ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏£‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤

        self._generate_maze()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ state ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
        self._draw()  # ‡∏ß‡∏≤‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏ô canvas

        root.bind("<Key>", self._on_key)  # ‡∏ú‡∏π‡∏Å event ‡∏Å‡∏î‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏Å‡∏±‡∏ö‡πÄ‡∏°‡∏ò‡∏≠‡∏î _on_key
        # Q: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà bind ‡∏Ñ‡∏µ‡∏¢‡πå ‡∏à‡∏∞‡∏Ç‡∏¢‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏¢‡∏±‡∏á‡πÑ‡∏á?
        # A: ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏ö event key press ‡πÑ‡∏î‡πâ ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà

    def _generate_maze(self):  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï state
        self.maze = [
            [0 if random.random() > 0.2 else 1 for _ in range(COLS)]  # ‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≥‡πÅ‡∏û‡∏á (1) ‡∏´‡∏£‡∏∑‡∏≠‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô (0) ‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ 20% ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≥‡πÅ‡∏û‡∏á
            for _ in range(ROWS)
        ]
        self.maze[0][0] = 0  # ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö cell ‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô
        self.maze[ROWS-1][COLS-1] = 0  # ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö cell ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏ô

        self.player_pos = [0, 0]  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô
        self.moves = 0  # ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡∏ô‡∏±‡∏ö moves
        self.trace = []  # ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏¢‡πÄ‡∏î‡∏¥‡∏°
        self.start_time = time.time()  # ‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà
        # Q: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á start_time ‡πÉ‡∏´‡∏°‡πà ‡∏à‡∏∞‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?
        # A: start_time ‡∏à‡∏∞‡∏Ñ‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏Å‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤ ‡∏ó‡∏≥‡πÉ‡∏´‡πâ timer ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏∞‡∏™‡∏°‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏Å‡∏°‡∏ô‡∏µ‡πâ

    def reset_maze(self):  # ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° New Maze
        self._generate_maze()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà
        self._draw()  # ‡∏ß‡∏≤‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà

    def _draw(self):  # ‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ö‡∏ô canvas
        self.canvas.delete("all")  # ‡∏•‡∏ö‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤

        # ‡∏ß‡∏≤‡∏î grid ‡∏Ç‡∏≠‡∏á‡πÄ‡∏Ç‡∏≤‡∏ß‡∏á‡∏Å‡∏ï
        for i in range(ROWS):
            for j in range(COLS):
                x1 = j * CELL_SIZE; y1 = i * CELL_SIZE  # ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ã‡πâ‡∏≤‡∏¢‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á cell
                x2 = x1 + CELL_SIZE; y2 = y1 + CELL_SIZE  # ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏Ç‡∏ß‡∏≤‡∏•‡πà‡∏≤‡∏á
                fill_color = PATH_COLOR if self.maze[i][j] == 0 else WALL_COLOR  # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤ maze
                self.canvas.create_rectangle(x1, y1, x2, y2, fill=fill_color, outline=GRID_COLOR)
                # Q: outline ‡∏Å‡∏±‡∏ö fill ‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?
                # A: fill ‡∏Ñ‡∏∑‡∏≠‡∏™‡∏µ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô shape, outline ‡∏Ñ‡∏∑‡∏≠‡∏™‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡∏Ç‡∏≠‡∏ö ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô

        # ‡∏ß‡∏≤‡∏î‡∏£‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô (trail)
        for (r, c) in self.trace:
            cx = c * CELL_SIZE + CELL_SIZE // 2; cy = r * CELL_SIZE + CELL_SIZE // 2
            self.canvas.create_oval(cx-4, cy-4, cx+4, cy+4, fill=TRACE_COLOR, outline="")

        # ‡∏ß‡∏≤‡∏î‡∏à‡∏∏‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
        gx1 = (COLS-1)*CELL_SIZE+5; gy1 = (ROWS-1)*CELL_SIZE+5
        gx2 = COLS*CELL_SIZE-5; gy2 = ROWS*CELL_SIZE-5
        self.canvas.create_rectangle(gx1, gy1, gx2, gy2, fill=GOAL_COLOR, outline=GOAL_COLOR, width=3)

        # ‡∏ß‡∏≤‡∏î‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô (glow + core)
        r, c = self.player_pos
        px1 = c*CELL_SIZE+8; py1 = r*CELL_SIZE+8
        px2 = (c+1)*CELL_SIZE-8; py2 = (r+1)*CELL_SIZE-8
        self.canvas.create_oval(px1-3, py1-3, px2+3, py2+3, outline=PLAYER_COLOR, width=3)
        self.canvas.create_oval(px1, py1, px2, py2, fill=PLAYER_COLOR, outline="")

        # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡πâ‡∏≤‡∏¢ moves ‡πÅ‡∏•‡∏∞ timer
        self.moves_label.config(text=f"Moves: {self.moves}")  # ‡πÅ‡∏™‡∏î‡∏á count moves ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
        elapsed = int(time.time() - self.start_time)  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ
        mins, secs = divmod(elapsed, 60)
        self.timer_label.config(text=f"Time: {mins:02d}:{secs:02d}")  # ‡πÅ‡∏™‡∏î‡∏á timer

        # ‡∏ï‡∏£‡∏ß‡∏à victory condition
        if self.player_pos == [ROWS-1, COLS-1]:  # ‡∏ñ‡πâ‡∏≤‡∏ñ‡∏∂‡∏á goal
            self._win()  # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏ô‡∏∞

    def _win(self):  # ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ä‡∏ô‡∏∞
        elapsed = int(time.time() - self.start_time)  # ‡πÄ‡∏ß‡∏•‡∏≤ elapsed
        mins, secs = divmod(elapsed, 60)
        messagebox.showinfo("üéâ You Win! üéâ",
            f"Congratulations, you escaped the neon maze in {self.moves} moves\nand {mins:02d}:{secs:02d}!")
        # Q: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà reset maze ‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á win ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£‡∏Ç‡∏∂‡πâ‡∏ô?
        # A: ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà goal ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏°‡∏Ñ‡πâ‡∏≤‡∏á ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
        self.reset_maze()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á maze ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏±‡∏ô‡∏ó‡∏µ

    def _on_key(self, e):  # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ event ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î
        dir_map = {"Up":(-1,0),"Down":(1,0),"Left":(0,-1),"Right":(0,1),
                   "w":(-1,0),"s":(1,0),"a":(0,-1),"d":(0,1)}  # ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà key->vector
        if e.keysym in dir_map:
            dx, dy = dir_map[e.keysym]
            nx, ny = self.player_pos[0]+dx, self.player_pos[1]+dy
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡πÅ‡∏û‡∏á
            if 0 <= nx < ROWS and 0 <= ny < COLS and self.maze[nx][ny] == 0:
                self.trace.append(tuple(self.player_pos))  # ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
                self.player_pos = [nx, ny]
                self.moves += 1  # ‡πÄ‡∏û‡∏¥‡πà‡∏° count moves
            self._draw()  # ‡∏ß‡∏≤‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà
            # Q: ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï ‡∏à‡∏∞‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏∞‡πÑ‡∏£? ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
            # A: ‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î IndexError ‡∏´‡∏£‡∏∑‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏≠‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á

if __name__ == "__main__":
    root = tk.Tk()  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á tkinter
    game = NeonMaze(root)  # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡πÄ‡∏Å‡∏°
    root.mainloop()  # ‡πÄ‡∏£‡∏¥‡πà‡∏° main loop ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡∏Å‡∏à‡πà‡∏≤‡∏¢ event
    # Q: mainloop() ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£?
    # A: ‡∏Ñ‡∏≠‡∏¢‡∏£‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ event (‡πÄ‡∏ä‡πà‡∏ô key press, button click) ‡πÉ‡∏´‡πâ GUI ‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ô loop ‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏±‡∏ö input
